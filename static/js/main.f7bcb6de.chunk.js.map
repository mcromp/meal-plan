{"version":3,"sources":["redux/fetchHelper/types.ts","redux/modules/calendar.ts","redux/modules/filterList.ts","redux/modules/alertMessage.ts","redux/modules/isLoading.ts","redux/modules/menuList.ts","redux/modules/currentUser.ts","redux/modules/users.ts","redux/modules/isLoggedIn.ts","redux/modules/isFailedToLoad.ts","redux/index.ts","hooks/useIsLoading.ts","redux/fetchHelper/apiURL.ts","redux/fetchHelper/fetchHelper.ts","pages/ErrorPage/index.tsx","shared/FailedToLoad.tsx","assets/MenuIcon.tsx","shared/Loading.tsx","assets/CloseIcon.tsx","pages/EditMenu/SubmitItemForm.tsx","pages/EditMenu/SubmitItem.tsx","pages/EditMenu/CheckoutItem.tsx","pages/EditMenu/FilterBar.tsx","pages/EditMenu/AddFoodItem.tsx","assets/HeartIcon.tsx","pages/EditMenu/FoodItem.tsx","pages/EditMenu/FoodItems.tsx","shared/AlertText.tsx","shared/types.ts","pages/EditMenu/SearchBar.tsx","hooks/useOnClickOutside.ts","pages/EditMenu/index.tsx","pages/Header/Header.tsx","pages/Home/UserDelete.tsx","pages/Home/UserSignup.tsx","pages/Home/SigninForm.tsx","pages/Home/Welcome.tsx","pages/Home/index.tsx","pages/Week/DayMenu.tsx","pages/Week/utils/generateWeek.ts","pages/Week/index.tsx","assets/printer.svg","pages/Week/WeekPrintable.tsx","pages/Routes/index.tsx","index.tsx"],"names":["ReqType","SET_CALENDAR","reducer","state","action","type","calendar","SET_FILTER","RESET_FILTER","initalState","id","name","selected","resetFilter","filterList","payload","filter","prevState","indexOf","map","SET_ALERT_MESSAGE","setAlertMessage","message","IS_LOADING","isLoading","SET_MENULIST","ADD_MENULIST","menuList","menuItem","SET_CURRENT_USER","CLEAR_CURRENT_USER","setCurrentUser","user","currentUser","_id","favList","username","SET_USERS_FROM_JSON","ADD_USER_JSON","DELETE_ONE_USER","users","userJSONs","userJSON","u","IS_LOGGED_IN","setIsLoggedIn","isLoggedIn","IS_FAILED_TO_LOAD","isFailedToLoad","rootReducer","combineReducers","alertMessage","store","createStore","applyMiddleware","thunk","useIsLoading","useState","isShown","setIsShown","useSelector","useEffect","timeout","setTimeout","clearTimeout","API_URL","MENU_URL","USER_URL","ReqList","reqGetMenu","URL","method","reqAddMenu","reqGetUsers","reqGetUser","reqGetCalendar","CALENDAR_URL","reqDeleteUser","reqAddUser","reqUpdateCalendar","reqAddFav","reqRemoveFav","reqClearFavList","fetchHelper","reqSelect","body","urlParam","dispatch","a","fetchURL","Error","fetch","JSON","stringify","headers","res","ok","json","response","setReqData","console","error","calendarJSON","calendarItem","userId","date","menuItems","setCalendar","deleteMessage","userAddMessage","ErrorPage","text","subText","isRedirected","isTimedOut","setIsTimedOut","listener","to","className","FailedToLoad","MenuIcon","xmlns","version","viewBox","x1","x2","y1","y2","gradientTransform","gradientUnits","offset","transform","width","height","x","y","strokeWidth","rx","strokeLinejoin","d","strokeLinecap","Loading","CloseIcon","vectorEffect","fill","stroke","cx","cy","ry","SubmitItemForm","selectedFilter","handleSelect","options","value","onChange","e","disabled","SubmitItem","setIsAddModalShown","setSelectedFilter","selectedName","setSelectedName","useDispatch","focusRef","useRef","closeRef","useLayoutEffect","current","focus","isDisabled","onKeyDown","key","handleKeyDown","ref","onClick","maxLength","target","item","handleSubmit","CheckoutItem","modifyQuantityOfCheckoutItem","removeFromCheckout","setName","findName","find","i","foodId","quantity","FilterBar","showAll","setShowAll","enabledFilterList","setEnabledFilterList","handleFilterClick","isEnabled","setFilter","includes","prevEnabledFilterList","splice","removeFilter","UpdatedEnabledFilters","addFilter","AddFoodItem","HeartIcon","FoodItem","addCheckoutItem","disableCheck","isFav","setIsFav","setIsDisabled","itemId","FoodItems","checkoutItems","cardList","setCardList","createCardList","selectedFilterIdList","reduce","acc","food","foodCategory","category","push","cardArr","length","filterCardList","some","Weekdays","MonthNames","AlertText","time","setText","SearchBar","checkoutBoardItems","addCheckOutBoardItem","textValue","setTextValue","searchListDisplay","setSearchListDisplay","isListShown","setisListShown","wrapperRef","handler","handleClickOutside","event","contains","document","addEventListener","removeEventListener","useOnClickOutside","placeholder","word","searchList","b","toLocaleLowerCase","handleChange","handleClick","tabIndex","EditMenu","isSubmitted","setIsSubmitted","setCheckoutItems","isModalShown","params","useParams","menuItemFind","day","amount","tempBoard","index","updatedQuantity","updatedCheckout","itemToAdd","updatedItems","checkoutMap","checkoutItem","Header","UserDelete","selectedUser","setConfirmDelete","UserSignup","setShowAddUser","signupUser","setValue","usernameList","setUsernameList","newlist","usernameIncluded","submitDisabled","SigninForm","label","selectMessage","optionMap","option","Welcome","Home","isDeleteConfirmShown","setIsDeleteConfirmShown","isSignupShown","setIsSignupShown","isAlertShown","setIsAlertShown","setSelectedUser","history","useHistory","deleteUser","checkValue","preventDefault","DayMenu","calendarDisplay","isClicked","setIsClicked","dateId","f","Week","React","forwardRef","_","week","setWeek","generatedWeek","today","Date","Array","dayIndex","theday","setDate","getDate","month","getMonth","getDay","String","year","getFullYear","generateWeekDays","dateList","sort","PrintableWeek","componentRef","trigger","href","src","printer","alt","content","Routes","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f7bcb6de.chunk.js","sourcesContent":["import { CalendarMenuItem, FilterId } from \"../../shared/types\";\nimport { AlertMessageActions } from \"../modules/alertMessage\";\nimport { SetCalendar } from \"../modules/calendar\";\nimport { IsFailedToLoadActions } from \"../modules/isFailedToLoad\";\nimport { IsLoadingActions } from \"../modules/isLoading\";\nimport { MenuListActions } from \"../modules/menuList\";\nimport { UsersActions } from \"../modules/users\";\nimport { MENU_URL, MENU_URL_ADD, USER_URL, CALENDAR_URL_GETMANY, USER_URL_SIGNUP, CALENDAR_URL_UPDATE, FAV_ADD, FAV_REMOVE, FAV_CLEAR } from \"./apiURL\";\n\nexport enum ReqType {\n  reqGetMenu = \"reqGetMenu\",\n  reqAddMenu = \"reqAddMenu\",\n  reqGetUsers = \"reqGetUsers\",\n  reqGetUser = \"reqGetUser\",\n  reqGetCalendar = \"reqGetCalendar\",\n  reqDeleteUser = \"reqDeleteUser\",\n  reqAddUser = \"reqAddUser\",\n  reqUpdateCalendar = \"reqUpdateCalendar\",\n  reqAddFav = \"reqAddFav\",\n  reqRemoveFav = \"reqRemoveFav\",\n  reqClearFavList = \"reqClearFavList\",\n}\n\nexport const ReqList = {\n reqGetMenu: { URL: MENU_URL, method: \"GET\" },\n reqAddMenu: { URL: MENU_URL_ADD, method: \"POST\"},\n reqGetUsers: { URL: USER_URL, method: \"GET\" },\n reqGetUser: { URL: USER_URL, method: \"GET\" },\n reqGetCalendar: { URL: CALENDAR_URL_GETMANY, method: \"POST\" },\n reqDeleteUser: { URL: USER_URL, method: \"DELETE\" },\n reqAddUser: { URL: USER_URL_SIGNUP, method: \"POST\" },\n reqUpdateCalendar: { URL: CALENDAR_URL_UPDATE, method: \"POST\" },\n reqAddFav: { URL: FAV_ADD, method: \"POST\" },\n reqRemoveFav: { URL: FAV_REMOVE, method: \"POST\" },\n reqClearFavList: { URL: FAV_CLEAR, method: \"POST\" },\n} as const\n\nexport type ReqList = keyof typeof ReqType\n\n\nexport interface AddMenuBody {\n  item: string,\n  filter : FilterId | \"\",\n}\nexport interface GetCalendarBody {\n dateList: string[];\n}\nexport interface DeleteUserBody {\n  id: string;\n}\nexport interface AddUserBody {\nusername: string\n}\nexport interface UpdateCalendarBody {\n  userId: string;\n  date: string;\n  menuItems: CalendarMenuItem[];\n}\nexport interface ToggleFavBody {\n  userId: string;\n  itemId: string;\n}\n\nexport type FetchHelperBodyType = \n| AddMenuBody \n| GetCalendarBody \n| DeleteUserBody \n| AddUserBody\n| UpdateCalendarBody \n| ToggleFavBody \n| null\n| \"\";\n\nexport type FetchHelperDispatchTypes = \n | UsersActions\n | SetCalendar\n | MenuListActions\n | AlertMessageActions\n | IsLoadingActions\n | IsFailedToLoadActions;\n\ninterface aa  { type: string, isLoading: boolean, }","import { CalendarItem, CalendarJSON } from \"../../shared/types\";\n\nconst SET_CALENDAR = \"menu-plan/calendar/SET_CALENDAR\";\n\nconst reducer = (state = [], action: SetCalendar) => {\n switch (action.type) {\n  case SET_CALENDAR:\n   return action.calendar;\n  default:\n   return state;\n }\n};\n\nexport const setCalendar = (calendarJSON: CalendarJSON[]) => {\n let calendar: CalendarItem[] = [];\n calendar = calendarJSON.map((calendarItem) => {\n  const { userId, date } = calendarItem;\n  return { userId, menuItems: [...calendarItem.menuItems], date };\n });\n return {\n  type: SET_CALENDAR,\n  calendar,\n };\n};\n\nexport interface SetCalendar {\n type: typeof SET_CALENDAR;\n calendar: CalendarItem[];\n}\nexport default reducer;\n","import { Filter } from \"../../shared/types\";\n\nconst SET_FILTER = \"menu-plan/filterList/SET_FILTER\";\nconst RESET_FILTER = \"menu-plan/filterList/RESET_FILTER\";\n\nconst initalState: Filter[] = [\n { id: \"FAVORITES\", name: \"User Favorites\", selected: false },\n { id: \"BREAKFAST\", name: \"Breakfast\", selected: false },\n { id: \"LUNCH\", name: \"Lunch\", selected: false },\n { id: \"DINNER\", name: \"Dinner\", selected: false },\n { id: \"DESSERT\", name: \"Dessert\", selected: false },\n { id: \"SNACK\", name: \"Snack\", selected: false },\n { id: \"DRINK\", name: \"Drink\", selected: false },\n];\n\nconst reducer = (\n filterList: Filter[] = initalState,\n action: FilterReducerActions\n) => {\n switch (action.type) {\n  case SET_FILTER:\n   const { filter, selected } = action.payload;\n   const prevState = [...filterList];\n   prevState[prevState.indexOf(filter)].selected = selected;\n   return prevState;\n  case RESET_FILTER:\n   return filterList.map((filter: Filter) => {\n    filter.selected = false;\n    return filter;\n   });\n  default:\n   return filterList;\n }\n};\n\nexport const setFilter = (filter: Filter, selected: boolean) => ({\n type: SET_FILTER,\n payload: {\n  filter,\n  selected,\n },\n});\n\nexport const resetFilter = () => ({\n type: RESET_FILTER,\n});\n\ninterface SetFiler {\n type: typeof SET_FILTER;\n payload: { filter: Filter; selected: boolean };\n}\ninterface ResetFilter {\n type: typeof RESET_FILTER;\n}\n\ntype FilterReducerActions = SetFiler | ResetFilter;\n\nexport default reducer;\n","const SET_ALERT_MESSAGE = \"menu-plan/SET_ALERT_MESSAGE\";\n\nconst reducer = (state: string = \"\", action: AlertMessage) => {\n switch (action.type) {\n  case SET_ALERT_MESSAGE:\n   return action.message;\n  default:\n   return state;\n }\n};\nexport const setAlertMessage = (message: string) => ({\n type: SET_ALERT_MESSAGE,\n message,\n});\n\ninterface AlertMessage {\n type: typeof SET_ALERT_MESSAGE;\n message: string;\n}\n\nexport type AlertMessageActions = AlertMessage\n\nexport default reducer;\n","const IS_LOADING: string = \"menu-plan/isLoading/IS_LOADING\";\n\nconst reducer = (state: boolean = false, action: Is_Loading) => {\n switch (action.type) {\n  case IS_LOADING:\n   return action.isLoading;\n  default:\n   return state;\n }\n};\n\nexport const isLoading = (isLoading: boolean) => ({\n type: IS_LOADING,\n isLoading,\n});\n\ninterface Is_Loading {\n type: typeof IS_LOADING;\n isLoading: boolean;\n};\n\nexport type IsLoadingActions = Is_Loading;\n\nexport default reducer;\n","import { MenuItemJSON } from \"../../shared/types\";\n\nconst SET_MENULIST = \"menu-plan/menuList/SET_MENULIST\";\nconst ADD_MENULIST = \"menu-plan/menuList/ADD_MENULIST\"\n\nconst reducer = (state = [], action: MenuListActions) => {\n switch (action.type) {\n  case SET_MENULIST:\n   return action.menuList;\n  case ADD_MENULIST:\nreturn [...state, action.menuItem]\n  default:\n   return state;\n }\n};\n\nexport const setMenuList = (menuList: MenuItemJSON[]) => ( {\n  type: SET_MENULIST,\n  menuList,\n});\n\nexport const addMenuList = (menuItem: MenuItemJSON) => ( {\n  type: ADD_MENULIST,\n  menuItem,\n});\n\ninterface SetMenuList {\n type: typeof SET_MENULIST;\n menuList: MenuItemJSON[];\n}\n\ninterface AddMenuList {\n type: typeof ADD_MENULIST;\n menuItem: MenuItemJSON;\n}\n\nexport type MenuListActions = SetMenuList | AddMenuList;\n\nexport default reducer;\n","import { User, UserJSON } from \"../../shared/types\";\n\nexport const SET_CURRENT_USER = \"menu-plan/currentUser/SET_CURRENT_USER\";\nexport const CLEAR_CURRENT_USER = \"menu-plan/currentUser/CLEAR_CURRENT_USER\";\n\nconst reducer = (\n currentUser: User | null = null,\n action: currentUserActions\n) => {\n switch (action.type) {\n  case SET_CURRENT_USER:\n   const { _id, favList, username } = action.payload;\n   const user = {\n    id: _id,\n    favList,\n    username,\n   };\n   return user;\n  case CLEAR_CURRENT_USER:\n   return \"\";\n  default:\n   return currentUser;\n }\n};\n\nexport const setCurrentUser = (user: UserJSON) => ({\n type: SET_CURRENT_USER,\n payload: user,\n});\nexport const clearCurrentUser = () => ({\n type: CLEAR_CURRENT_USER,\n});\n\ninterface SetCurrentUser {\n type: typeof SET_CURRENT_USER;\n payload: UserJSON;\n}\n\ninterface ClearCurrentUser {\n type: typeof CLEAR_CURRENT_USER;\n}\n\nexport type currentUserActions = SetCurrentUser | ClearCurrentUser;\n\nexport default reducer;\n","import { User, UserJSON } from \"../../shared/types\";\n\nconst SET_USERS_FROM_JSON = \"menu-plan/users/SET_USERS_FROM_JSON\";\nconst ADD_USER_JSON = \"menu-plan/users/ADD_USER_JSON\";\nconst DELETE_ONE_USER = \"menu-plan/users/DELETE_ONE_USER\";\n\nconst reducer = (state: User[] = [], action: UsersActions) => {\n switch (action.type) {\n  case SET_USERS_FROM_JSON:\n   const users: User[] = action.userJSONs.map((user) => {\n    const id = user._id;\n    return { id, favList: [...user.favList], username: user.username };\n   });\n   return users;\n  case ADD_USER_JSON:\n   const { favList, username, _id: id } = action.userJSON;\n   const user = { id, favList, username };\n   return [...state, user];\n  case DELETE_ONE_USER:\n   return state.filter((u) => !(u.id === action.id));\n  default:\n   return state;\n }\n};\n\nexport const setUsersFromJSON = (userJSONs: UserJSON[]) => {\n return {\n  type: SET_USERS_FROM_JSON,\n  userJSONs,\n };\n};\n\nexport const addUserFromJSON = (userJSON: UserJSON) => {\n return {\n  type: ADD_USER_JSON,\n  userJSON,\n };\n};\n\nexport const deleteOneUser = (id: string) => {\n return {\n  type: DELETE_ONE_USER,\n  id,\n };\n};\n\ninterface SetUsersFromJSON {\n type: typeof SET_USERS_FROM_JSON;\n userJSONs: UserJSON[];\n}\n\ninterface AddUserJSON {\n type: typeof ADD_USER_JSON;\n userJSON: UserJSON;\n}\ninterface DeleteOneUser {\n type: typeof DELETE_ONE_USER;\n id: string;\n}\n\nexport type UsersActions = SetUsersFromJSON | DeleteOneUser | AddUserJSON;\n\nexport default reducer;\n","const IS_LOGGED_IN = \"menu-plan/isLoggedIn/IS_LOGGED_IN\";\n\nconst reducer = (state: boolean = false, action: Is_Logged_In) => {\n switch (action.type) {\n  case IS_LOGGED_IN:\n   return action.isLoggedIn;\n  default:\n   return state;\n }\n};\n\nexport const setIsLoggedIn = (isLoggedIn: boolean) => ({\n type: IS_LOGGED_IN,\n isLoggedIn,\n});\n\ninterface Is_Logged_In {\n type: typeof IS_LOGGED_IN;\n isLoggedIn: boolean;\n}\n\nexport default reducer;\n","const IS_FAILED_TO_LOAD: string = \"menu-plan/isFailedToLoad/IS_FAILED_TO_LOAD\";\n\nconst reducer = (state: boolean = false, action: Is_Failed_To_Load) => {\n switch (action.type) {\n  case IS_FAILED_TO_LOAD:\n   return action.isFailedToLoad;\n  default:\n   return state;\n }\n};\n\nexport const isFailedToLoad = (isFailedToLoad: boolean) => ({\n type: IS_FAILED_TO_LOAD,\n isFailedToLoad,\n});\n\ninterface Is_Failed_To_Load {\n type: typeof IS_FAILED_TO_LOAD;\n isFailedToLoad: boolean;\n};\n\nexport type IsFailedToLoadActions = Is_Failed_To_Load;\n\nexport default reducer;\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport calendar from \"./modules/calendar\";\nimport filterList from \"./modules/filterList\";\nimport alertMessage from \"./modules/alertMessage\";\nimport isLoading from \"./modules/isLoading\";\nimport menuList from \"./modules/menuList\";\nimport currentUser from \"./modules/currentUser\";\nimport users from \"./modules/users\";\nimport isLoggedIn from \"./modules/isLoggedIn\";\nimport isFailedToLoad from \"./modules/isFailedToLoad\";\n\nconst rootReducer = combineReducers({\n filterList,\n menuList,\n users,\n currentUser,\n calendar,\n isLoading,\n isLoggedIn,\n alertMessage,\n isFailedToLoad\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../redux';\n\nconst useIsLoading = () => {\n  const [isShown, setIsShown] = useState(false)\n  const isLoading = useSelector<RootState, boolean>(state => state.isLoading);\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      setIsShown(isLoading)\n    }, 750);\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isLoading]);\n\n  return [isShown];\n};\n\n\nexport default useIsLoading;\n"," export const API_URL: string = \"https://ancient-fortress-30675.herokuapp.com/\";\n\n export const CALENDAR_URL = API_URL + \"calendar/\";\n export const CALENDAR_URL_UPDATE = CALENDAR_URL + \"update/\";\n export const CALENDAR_URL_GETMANY = CALENDAR_URL + \"user/\";\n\n export const MENU_URL = API_URL + \"menu/\";\n export const MENU_URL_ADD = MENU_URL + \"add/\"\n \n\n export const USER_URL: string = API_URL + \"users/\";\n export const USER_URL_SIGNUP: string = USER_URL + \"signup/\";\n\n export const FAV_ADD: string = USER_URL + \"favAdd/\";\n export const FAV_REMOVE: string = USER_URL + \"favRemove/\";\n export const FAV_CLEAR: string = USER_URL + \"favClear/\";\n","import { Dispatch } from \"react\";\nimport { setAlertMessage } from \"../modules/alertMessage\";\nimport { setCalendar } from \"../modules/calendar\";\nimport { setCurrentUser } from \"../modules/currentUser\";\nimport { isFailedToLoad } from \"../modules/isFailedToLoad\";\nimport { isLoading } from \"../modules/isLoading\";\nimport { addMenuList, setMenuList } from \"../modules/menuList\";\nimport { setUsersFromJSON, deleteOneUser, addUserFromJSON } from \"../modules/users\";\nimport { ReqType, ReqList, FetchHelperBodyType, FetchHelperDispatchTypes } from \"./types\";\n\n\nexport const fetchHelper  = (\n reqSelect: ReqType,\n body: FetchHelperBodyType = null,\n urlParam: string = \"\"\n) => async (dispatch: Dispatch<FetchHelperDispatchTypes>) => {\n try {\n  const fetchURL: string = ReqList[reqSelect].URL + urlParam;\n  if (!fetchURL) throw Error(\"Error: invalid URL\");\n  dispatch(isLoading(true));\n\n  const res = body\n   ? await fetch(fetchURL, {\n      method: ReqList[reqSelect].method,\n      body: JSON.stringify(body),\n      headers: {\n       \"Content-Type\": \"application/json\",\n      },\n     })\n   : await fetch(fetchURL);\n\n  if (!res.ok) throw Error(await res.json());\n  const response = await res.json();\n  setReqData(dispatch, response, reqSelect);\n  dispatch(isLoading(false));\n } catch (error) {\n  dispatch(isLoading(false));\n  dispatch(isFailedToLoad(true));\n  console.error(`Error with ${reqSelect} call`);\n  console.error(error.message);\n }\n};\n\nconst setReqData = (dispatch: any, response: any, reqSelect: ReqList) => {\n if (reqSelect === ReqType.reqGetMenu) dispatch(setMenuList(response));\n if (reqSelect === ReqType.reqAddMenu) dispatch(addMenuList(response));\n if (reqSelect === ReqType.reqGetUsers) dispatch(setUsersFromJSON(response));\n if (reqSelect === ReqType.reqGetUser) dispatch(setCurrentUser(response));\n if (reqSelect === ReqType.reqGetCalendar) dispatch(setCalendar(response));\n if (reqSelect === ReqType.reqAddFav) dispatch(setCurrentUser(response));\n if (reqSelect === ReqType.reqRemoveFav) dispatch(setCurrentUser(response));\n if (reqSelect === ReqType.reqDeleteUser) {\n      dispatch(deleteOneUser(response._id));\n      const deleteMessage: string = `User: ${response.username} deleted`;\n      dispatch(setAlertMessage(deleteMessage));\n }\n if (reqSelect === ReqType.reqAddUser) {\n      const userAddMessage: string = `User: ${response.username} added`;\n      dispatch(addUserFromJSON(response));\n      dispatch(setAlertMessage(userAddMessage)) \n }\n};","import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport \"./styles/error-page.css\"\n\nconst ErrorPage: React.FC<ErrorPageProps> = ({\n  text,\n  subText,\n  isRedirected\n}) => {\n  const [isTimedOut, setIsTimedOut] = useState<boolean>(false)\n  useEffect(() => {\n    let listener = setTimeout(() => {\n      setIsTimedOut(true)\n    }, 5000);\n    return () => {\n      clearTimeout(listener)\n    }\n  }, []);\n\n  if (isRedirected && isTimedOut) { return <Redirect to={`/`} />; };\n\n  return (\n    <div className=\"main\">\n      <span className=\"main__text\">{text}</span>\n      <span className=\"main__sub-text\">{subText}</span>\n    </div>\n  );\n};\n\ntype ErrorPageProps = {\n  text: string;\n  subText: string;\n  isRedirected: boolean;\n};\n\nexport default ErrorPage;","import React from 'react';\nimport ErrorPage from '../pages/ErrorPage';\n\nconst FailedToLoad = () => {\n  return (\n    <ErrorPage\n      text={\"Server Error\"}\n      subText={\"Could not load, please try again later\"}\n      isRedirected={false} />\n  );\n};\n\nexport default FailedToLoad;","import React from \"react\";\n\nconst MenuIcon = () => (\n  <svg\n    className=\"svg__menu\"\n    xmlns='http://www.w3.org/2000/svg'\n    version='1.1'\n    viewBox='0 0 980 1619'\n  >\n    <defs>\n      <linearGradient\n        id='linearGradient1480'\n        x1='39.5'\n        x2='920.5'\n        y1='660'\n        y2='660'\n        gradientTransform='matrix(1 0 0 1.0012 .002 -.047)'\n        gradientUnits='userSpaceOnUse'\n      >\n        <stop offset='0'></stop>\n      </linearGradient>\n    </defs>\n    <g\n      transform='translate(9.998 287.46)'>\n      <rect\n        width='880'\n        height='1241.5'\n        x='40.001'\n        y='40.001'\n        strokeWidth='100'\n        rx='0.1'\n      ></rect>\n      <g>\n        <path\n          strokeLinejoin='round'\n          strokeWidth='100'\n          d='M40 40l553.66-277.46L600 40'\n        ></path>\n        <path\n          strokeWidth='91.287'\n          d='M680 760s-3.083-24.602-11.741-56.6C652.26 644.265 609.777 560 479.999 560c-129.45 0-169.95 84.72-186.06 143.83-8.78 32.218-13.937 56.169-13.937 56.169zM480 480v-40'\n        ></path>\n        <path\n          strokeLinecap='round'\n          strokeWidth='92.582'\n          d='M240 880h480'\n        ></path>\n      </g>\n      <path d='M360 600l40 40'></path>\n    </g>\n  </svg>\n);\n\nexport default MenuIcon;","import React from 'react'\nimport MenuIcon from '../assets/MenuIcon';\n\nconst Loading: React.FC = () => {\n  return <div className=\"loader\"><MenuIcon /></div>;\n}\n\nexport default Loading;\n\n","import React from \"react\";\n\nconst CloseIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"svg__close\"\n    viewBox=\"0 0 32 32\"\n    vectorEffect=\"non-scaling-stroke\"\n  >\n    <path fill=\"none\" stroke=\"null\" d=\"M-1 -1H33V33H-1z\"></path>\n    <g fill=\"none\" strokeWidth=\"3\">\n      <ellipse cx=\"16\" cy=\"16\" rx=\"13.333\" ry=\"13.588\"></ellipse>\n      <path\n        d=\"M10.031 22.187L21.969 9.813\"\n      ></path>\n      <path\n        d=\"M10.031 22.187L21.969 9.813\"\n        transform=\"rotate(90 16 16)\"\n      ></path>\n    </g>\n  </svg>\n);\n\n\nexport default CloseIcon;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux';\nimport { Filter, FilterId } from '../../shared/types';\n\nconst SubmitItemForm: React.FC<SubmitItemFormProps> = ({\n  selectedFilter,\n  handleSelect\n}) => {\n  const filterList = useSelector<RootState, Filter[]>(state => state.filterList);\n\n  const options = (filterList.map((filter: Filter) => {\n    if (filter.id !== \"FAVORITES\") return <option className=\"\" key={filter.id} value={filter.id}>{filter.name}</option>\n    return null\n  }\n  ));\n  return (\n    <form className=\"submit-item__form\">\n      <label>\n        <select className=\"submit-item__select\" value={selectedFilter} onChange={(e) => handleSelect(e)}>\n          <option value=\"\" disabled>Select filter category</option>\n          {options}\n        </select>\n      </label>\n    </form>\n  )\n}\n\ntype SubmitItemFormProps = {\n  selectedFilter: (FilterId | \"\"),\n  handleSelect: (e: React.ChangeEvent<HTMLSelectElement>) => void\n}\n\nexport default SubmitItemForm;","import React, { useState, useLayoutEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport CloseIcon from '../../assets/CloseIcon';\nimport { fetchHelper } from '../../redux/fetchHelper/fetchHelper';\nimport { AddMenuBody, ReqType } from '../../redux/fetchHelper/types';\nimport { FilterId } from '../../shared/types';\nimport SubmitItemForm from './SubmitItemForm';\n\nconst SubmitItem: React.FC<SubmitItemProps> = ({\n  setIsAddModalShown\n}) => {\n  const [selectedFilter, setSelectedFilter] = useState<FilterId | \"\">(\"\")\n  const [selectedName, setSelectedName] = useState<string>(\"\")\n  const dispatch = useDispatch();\n  const focusRef = useRef<HTMLInputElement>(null);\n  const closeRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    if (focusRef.current) focusRef.current.focus();\n  }, []);\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.key === \"Escape\") setIsAddModalShown(false)\n  }\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedFilter(e.target.value as FilterId)\n  };\n\n  const handleSubmit = () => {\n    const body: AddMenuBody = {\n      item: selectedName,\n      filter: selectedFilter\n    }\n    dispatch(fetchHelper(ReqType.reqAddMenu, body))\n    setIsAddModalShown(false)\n  }\n\n  const isDisabled: boolean = !selectedName || !selectedFilter;\n  return (\n    <div className=\"submit-item-container\" onKeyDown={(e) => handleKeyDown(e)}>\n      <div className=\"submit-item\">\n        <div className=\"submit-item__close-icon\" ref={closeRef} onClick={() => setIsAddModalShown(false)}> <CloseIcon /></div>\n        <span className=\"submit-item__text\">Input a name, assign a filter, then click 'Submit'</span>\n        <input className=\"submit-item__text-input\"\n          ref={focusRef}\n          maxLength={20}\n          value={selectedName}\n          onChange={(e) => setSelectedName(e.target.value)}\n          type=\"text\" />\n\n        <SubmitItemForm\n          selectedFilter={selectedFilter}\n          handleSelect={handleSelect} />\n\n        <div className=\"submit-item__button-container\">\n          <button className=\"button submit-item__button\" onClick={() => setIsAddModalShown(false)}>Cancel</button>\n          <button className=\"button submit-item__button\" disabled={isDisabled} onClick={() => handleSubmit()}>Submit</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype SubmitItemProps = {\n  setIsAddModalShown: (bool: boolean) => void;\n}\n\nexport default SubmitItem;","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux';\nimport { CalendarMenuItem, MenuItemJSON } from '../../shared/types';\n\n\nconst CheckoutItem: React.FC<CheckoutItemProps> = ({\n  item,\n  modifyQuantityOfCheckoutItem,\n  removeFromCheckout\n}) => {\n  const menuList = useSelector<RootState, MenuItemJSON[]>(state => state.menuList);\n  const [name, setName] = useState<string>(\"\");\n\n  useEffect(() => {\n    const findName = menuList.find(i => i.id === item.foodId);\n    if (findName) setName(findName?.item);\n  }, [menuList, item.foodId]);\n\n\n  return (\n    <div className=\"checkout-item\">\n      <span className=\"checkout-item__name\">{name}</span>\n      <span className=\"checkout-item__quantity\">{item.quantity}</span>\n      <div className=\"checkout-item__buttons\">\n        <button className=\"button button--checkout-item\" onClick={() => modifyQuantityOfCheckoutItem(item, 1)}>+</button>\n        <button className=\"button button--checkout-item\" onClick={() => modifyQuantityOfCheckoutItem(item, -1)}>-</button>\n        <button className=\"button button--checkout-item\" onClick={() => removeFromCheckout(item)}>remove</button>\n      </div>\n    </div>\n  );\n};\n\ntype CheckoutItemProps = {\n  item: CalendarMenuItem;\n  modifyQuantityOfCheckoutItem: (item: CalendarMenuItem, amount: number) => void;\n  removeFromCheckout: (item: CalendarMenuItem) => void\n};\n\nexport default CheckoutItem;","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setFilter, resetFilter } from \"../../redux/modules/filterList\";\nimport { RootState } from \"../../redux\";\nimport { Filter } from \"../../shared/types\";\nimport CloseIcon from \"../../assets/CloseIcon\";\n\n\nconst FilterBar: React.FC = () => {\n  const [showAll, setShowAll] = useState<boolean>(false);\n  const [enabledFilterList, setEnabledFilterList] = useState<Filter[]>([]);\n  const filterList = useSelector<RootState, Filter[]>(state => state.filterList);\n  const dispatch = useDispatch();\n\n  const handleFilterClick = (filter: Filter, isEnabled: boolean) => {\n    dispatch(setFilter(filter, isEnabled));\n    setShowAll(true);\n  };\n\n  const addFilter = (filter: Filter) => {\n    const UpdatedEnabledFilters = [...enabledFilterList, filter];\n    setEnabledFilterList(UpdatedEnabledFilters);\n  };\n\n  const removeFilter = (filter: Filter) => {\n    const prevEnabledFilterList = [...enabledFilterList];\n    prevEnabledFilterList.splice(prevEnabledFilterList.indexOf(filter), 1);\n    if (!prevEnabledFilterList[0]) setShowAll(false);\n    setEnabledFilterList(prevEnabledFilterList);\n  };\n\n  const clearAll = () => {\n    dispatch(resetFilter());\n    setEnabledFilterList([]);\n    setShowAll(false);\n  };\n  return (\n    <div className=\"filters\" >\n      {filterList.map((filter: Filter) => {\n        return (enabledFilterList.includes(filter)) ?\n          <button\n            className=\"filters__button filters__button--remove\"\n            key={filter.name}\n            onClick={() => {\n              handleFilterClick(filter, false);\n              removeFilter(filter);\n            }}>{filter.name} <CloseIcon /></button>\n          :\n          <button\n            className=\"filters__button filters__button--add\"\n            key={filter.name}\n            onClick={() => {\n              handleFilterClick(filter, true);\n              addFilter(filter);\n            }}\n          >{filter.name}</button>\n      }\n      )}\n\n      {showAll ? <button className=\"filters__button filters__button--clear-all\" onClick={clearAll}>Clear All Filters</button> : null}\n    </div>\n  );\n};\n\n\n\nexport default FilterBar;","import React from 'react';\n\nconst AddFoodItem: React.FC<AddFoodItemProps> = ({ setIsAddModalShown }) => {\n  return (\n    <div className=\"food-item add-food-item\" onClick={() => setIsAddModalShown(true)}>\n      <span className=\"food-item__title add-food-item__title\">Add your own menu item!</span>\n      <div className=\"add-food-item__icon\">+</div>\n    </div >\n  )\n};\n\ntype AddFoodItemProps = {\n  setIsAddModalShown: (bool: boolean) => void;\n}\n\nexport default AddFoodItem;","import React from \"react\";\nconst HeartIcon = () => (\n  <svg className=\"svg__heart\" viewBox=\"0 0 32 29.6\">\n    <path d=\"M23.6,0c-3.4,0-6.3,2.7-7.6,5.6C14.7,2.7,11.8,0,8.4,0C3.8,0,0,3.8,0,8.4c0,9.4,9.5,11.9,16,21.2\n\tc6.1-9.3,16-12.1,16-21.2C32,3.8,28.2,0,23.6,0z\"/>\n  </svg>\n);\n\n\nexport default HeartIcon;","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../redux\";\nimport { fetchHelper } from \"../../redux/fetchHelper/fetchHelper\";\nimport { ReqType } from \"../../redux/fetchHelper/types\";\nimport { MenuItemJSON, User } from \"../../shared/types\";\nimport HeartIcon from \"../../assets/HeartIcon\";\n\nconst FoodItem: React.FC<FoodItemProps> = ({\n  item,\n  addCheckoutItem,\n  disableCheck,\n}) => {\n  const { favList, id: userId } = useSelector<RootState, User>(state => state.currentUser);\n  const [isFav, setIsFav] = useState<boolean>(favList.includes(item.id));\n  const [isDisabled, setIsDisabled] = useState<boolean>();\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    setIsDisabled(disableCheck(item.id));\n  }, [disableCheck, item.id]);\n\n  const toggleFav = () => {\n    const body = {\n      userId,\n      itemId: item.id\n    }\n    isFav ? dispatch(fetchHelper(ReqType.reqRemoveFav, body))\n      : dispatch(fetchHelper(ReqType.reqAddFav, body));\n    setIsFav(prevState => !prevState);\n  };\n\n\n  return (\n    <div className={isDisabled ? \"food-item food-item--disabled\" : \"food-item\"}>\n      <span className=\"food-item__title\">{item.item}</span>\n      <div className=\"food-item__button\">\n        <button className=\"food-item__button--add\" disabled={isDisabled} onClick={() => addCheckoutItem(item)} >+</button>\n        <button className={isFav ? \"food-item__heart--fav\" : \"food-item__heart\"} onClick={toggleFav}><HeartIcon /></button>\n      </div>\n    </div>\n  );\n};\n\ntype FoodItemProps = {\n  item: MenuItemJSON,\n  addCheckoutItem: (item: MenuItemJSON) => void,\n  disableCheck: (id: string) => boolean\n};\n\nexport default FoodItem;","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../redux\";\nimport { fetchHelper } from \"../../redux/fetchHelper/fetchHelper\";\nimport { ReqType } from \"../../redux/fetchHelper/types\";\nimport { Filter, MenuItemJSON, User, FilterId, CalendarMenuItem } from \"../../shared/types\";\nimport AddFoodItem from \"./AddFoodItem\";\nimport FoodItem from \"./FoodItem\";\n\n\nconst FoodItems: React.FC<FoodItemsProps> = ({\n  addCheckoutItem,\n  checkoutItems,\n  setIsAddModalShown\n}) => {\n  const filterList = useSelector<RootState, Filter[]>(state => state.filterList);\n  const menuList = useSelector<RootState, MenuItemJSON[]>(state => state.menuList);\n  const [cardList, setCardList] = useState<MenuItemJSON[] | null>(null);\n  const { favList, id: userId } = useSelector<RootState, User>(state => state.currentUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const filterCardList = () => {\n      let cardArr: MenuItemJSON[] = [];\n      const selectedFilterIdList = filterList.reduce<FilterId[]>((acc, filter) => {\n        if (filter.selected) acc.push(filter.id)\n        return acc\n      }, []);\n\n      selectedFilterIdList.length === 0\n        ? (cardArr = menuList)\n        : (cardArr = createCardList(selectedFilterIdList));\n\n      setCardList(cardArr);\n    };\n\n    const createCardList = (selectedFilterIdList: FilterId[]) =>\n      menuList.reduce<MenuItemJSON[]>((acc, food) => {\n        const foodCategory = food.category as FilterId;\n        if (\n          selectedFilterIdList.includes(foodCategory) ||\n          (favList.includes(food.id) &&\n            selectedFilterIdList.includes(\"FAVORITES\"))\n        ) acc.push(food);\n        return acc;\n      }, []);\n\n    setCardList([]);\n    filterCardList();\n  }, [filterList, menuList, favList]);\n\n  useEffect(() => {\n    dispatch(fetchHelper(ReqType.reqGetUser, \"\", userId))\n  }, [dispatch, userId]);\n\n\n  const disableCheck = (id: string): boolean => {\n    return checkoutItems ?\n      (checkoutItems.some((item: CalendarMenuItem) => item.foodId === id))\n      : false\n  };\n\n  return (\n    <div className=\"food-items-grid\">\n      {cardList && cardList.map((item: MenuItemJSON) => (\n        <FoodItem\n          key={item.id}\n          item={item}\n          addCheckoutItem={addCheckoutItem}\n          disableCheck={disableCheck} />\n      ))}\n      <AddFoodItem setIsAddModalShown={setIsAddModalShown} />\n    </div>\n  );\n};\n\ntype FoodItemsProps = {\n  addCheckoutItem: (item: MenuItemJSON) => void,\n  setIsAddModalShown: React.Dispatch<React.SetStateAction<boolean>>,\n  checkoutItems: CalendarMenuItem[]\n};\n\nexport default FoodItems;","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../redux\";\nimport { setAlertMessage } from \"../redux/modules/alertMessage\";\n\nconst AlertText: React.FC<AlertTextProps> = ({ time = 1200 }) => {\n  const alertMessage = useSelector<RootState, string>(state => state.alertMessage);\n  const dispatch = useDispatch();\n\n  const [text, setText] = useState<string>(\"\")\n\n  useEffect(() => {\n    setText(alertMessage)\n    let listener = setTimeout(() => {\n      setText(\"\")\n      dispatch(setAlertMessage(\"\"))\n    }, time);\n    return () => {\n      clearTimeout(listener);\n    }\n  }, [alertMessage, setText, dispatch, time]);\n\n\n  return (\n    <>\n      <p className={text ? \"alert\" : \"\"}>{text}</p>\n    </>);\n};\n\ntype AlertTextProps = {\n  time?: number\n};\n\nexport default AlertText;","export interface CalendarItem {\n menuItems: CalendarMenuItem[];\n date: string;\n userId: string;\n}\n\nexport type CalendarMenuItem = {\n foodId: string;\n quantity: number;\n _id?: string;\n};\n\nexport interface MenuItemJSON {\n item: string;\n category: string;\n id: string;\n}\n\nexport interface CalendarJSON {\n _id: string;\n menuItems: CalendarMenuItem[];\n date: string;\n userId: string;\n __v: number;\n}\n\nexport type UserJSON = {\n _id: string;\n favList: string[];\n username: string;\n createdAt: string;\n updatedAt: string;\n __v: number;\n};\nexport type User = {\n id: string;\n favList: string[];\n username: string;\n};\n\nexport type FilterId =\n | \"LUNCH\"\n | \"DINNER\"\n | \"DESSERT\"\n | \"DRINK\"\n | \"SNACK\"\n | \"BREAKFAST\"\n | \"FAVORITES\";\n\nexport type Filter = {\n id: FilterId;\n name: string;\n selected: boolean;\n};\n\nexport enum Weekdays {\n \"Sun\",\n \"Mon\",\n \"Tues\",\n \"Wed\",\n \"Thur\",\n \"Fri\",\n \"Sat\",\n}\nexport enum MonthNames {\n \"Jan\",\n \"Feb\",\n \"Mar\",\n \"Apr\",\n \"May\",\n \"June\",\n \"July\",\n \"Aug\",\n \"Sept\",\n \"Oct\",\n \"Nov\",\n \"Dec\",\n}\n\nexport type WeekDay = {\n month: string;\n day: string;\n date: string;\n year: string;\n dateId: string;\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useOnClickOutside } from \"../../hooks/useOnClickOutside\";\nimport { setAlertMessage } from \"../../redux/modules/alertMessage\";\nimport AlertText from \"../../shared/AlertText\";\nimport { MenuItemJSON, CalendarMenuItem } from \"../../shared/types\";\n\nconst SearchBar: React.FC<SearchBarProps> = ({ menuList, checkoutBoardItems, addCheckOutBoardItem }) => {\n  const [textValue, setTextValue] = useState<string>(\"\")\n  const [searchListDisplay, setSearchListDisplay] = useState<MenuItemJSON[]>([])\n  const [isListShown, setisListShown] = useState(true)\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setAlertMessage(\"\"))\n  }, [dispatch])\n\n  const wrapperRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n  useOnClickOutside(wrapperRef, () => setisListShown(false))\n\n  const checkSubStingIncludes = (a: string, b: string) => a.toLocaleLowerCase().includes(b.toLocaleLowerCase())\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const word = e.target.value;\n    setSearchListDisplay([])\n    setTextValue(word)\n    if (word.length > 0) {\n      const searchList = menuList.filter((item: MenuItemJSON) => checkSubStingIncludes(item.item, word)).splice(0, 5)\n      setSearchListDisplay(searchList)\n    }\n  }\n\n  const handleClick = (item: MenuItemJSON) => {\n    setSearchListDisplay([])\n    setTextValue(\"\")\n    const itemAlreadyInCheckout = checkoutBoardItems.map((item: CalendarMenuItem) => item.foodId)\n    if (itemAlreadyInCheckout.includes(item.id)) {\n      dispatch(setAlertMessage(`${item.item} already added`))\n    }\n    else addCheckOutBoardItem(item)\n  }\n\n  return (\n    <div ref={wrapperRef} className=\"search\">\n      <input\n        type=\"search\"\n        onClick={() => setisListShown(true)}\n        placeholder=\"Type to search\"\n        value={textValue}\n        onChange={e => handleChange(e)} />\n      <div className=\"search__alert\">\n        <AlertText />\n      </div>\n      <div className={isListShown && textValue ? \"search-results\" : \"none\"}>\n        {isListShown && searchListDisplay.map(item =>\n          <div\n            className=\"search-results__container\"\n            onClick={() => handleClick(item)}\n            key={item.id}\n            tabIndex={0}>\n            <span className=\"search-results__name\">{item.item}</span>\n          </div>)}\n      </div>\n    </div >\n  );\n};\n\ntype SearchBarProps = {\n  menuList: MenuItemJSON[];\n  checkoutBoardItems: CalendarMenuItem[];\n  addCheckOutBoardItem: (item: MenuItemJSON) => void\n}\n\nexport default SearchBar","import {  useLayoutEffect } from 'react'\n\nexport function useOnClickOutside(wrapperRef: React.MutableRefObject<HTMLInputElement>, handler: () => void) {\n  useLayoutEffect(() => {\n    const handleClickOutside = (event: MouseEvent | KeyboardEvent): void => {\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target as HTMLElement)) handler();\n  }\n\n  document.addEventListener('mousedown', handleClickOutside);\n  document.addEventListener('keydown', handleClickOutside);\n\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n        document.removeEventListener('keydown', handleClickOutside);\n      }\n    }, [wrapperRef, handler]);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport useIsLoading from \"../../hooks/useIsLoading\";\nimport { RootState } from \"../../redux\";\nimport { fetchHelper } from \"../../redux/fetchHelper/fetchHelper\";\nimport { ReqType } from \"../../redux/fetchHelper/types\";\nimport FailedToLoad from \"../../shared/FailedToLoad\";\nimport Loading from \"../../shared/Loading\";\nimport { User, CalendarItem, MenuItemJSON, CalendarMenuItem } from \"../../shared/types\";\nimport SubmitItem from \"./SubmitItem\";\nimport CheckoutItem from \"./CheckoutItem\";\nimport FilterBar from \"./FilterBar\";\nimport FoodItems from \"./FoodItems\";\nimport SearchBar from \"./SearchBar\";\nimport './styles/edit-menu.css';\n\nconst EditMenu: React.FC = () => {\n  const currentUser = useSelector<RootState, User | null>(state => state.currentUser);\n  const calendar = useSelector<RootState, CalendarItem[]>(state => state.calendar);\n  const menuList = useSelector<RootState, MenuItemJSON[]>(state => state.menuList);\n  const isFailedToLoad = useSelector<RootState, Boolean>(state => state.isFailedToLoad);\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\n  const [checkoutItems, setCheckoutItems] = useState<CalendarMenuItem[]>([]);\n  const [isModalShown, setIsAddModalShown] = useState<boolean>(false);\n  const [isLoading] = useIsLoading();\n  const params: { day: string } = useParams();\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    const menuItemFind = calendar.find(((item) => item.date === params.day))\n    if (menuItemFind) {\n      setCheckoutItems(menuItemFind.menuItems)\n    };\n  }, [params.day, calendar]);\n\n  const handleSubmit = () => {\n    if (currentUser && checkoutItems) {\n      const body = {\n        userId: currentUser?.id,\n        date: params.day,\n        menuItems: [...checkoutItems]\n      };\n      dispatch(fetchHelper(ReqType.reqUpdateCalendar, body));\n    };\n    setIsSubmitted(true);\n  };\n\n  const modifyQuantityOfCheckoutItem = (item: CalendarMenuItem, amount: number) => {\n    const tempBoard: CalendarMenuItem[] = [...checkoutItems];\n    const index: number = tempBoard?.indexOf(item);\n    const updatedQuantity = tempBoard[index].quantity + amount\n    updatedQuantity > 0 ?\n      tempBoard[index].quantity = updatedQuantity\n      : tempBoard.splice(index, 1);\n    setCheckoutItems(tempBoard);\n  };\n\n  const removeFromCheckout = (item: CalendarMenuItem) => {\n    const updatedCheckout = [...checkoutItems];\n    const index: number = updatedCheckout?.indexOf(item);\n    updatedCheckout.splice(index, 1);\n    setCheckoutItems(updatedCheckout);\n  };\n\n  const addCheckoutItem = (item: MenuItemJSON) => {\n    if (checkoutItems?.find(i => i.foodId === item.id)) return;\n    const itemToAdd: CalendarMenuItem = {\n      foodId: item.id,\n      quantity: 1,\n    };\n    const updatedItems = [...checkoutItems, itemToAdd];\n    setCheckoutItems(updatedItems);\n\n  };\n\n  const checkoutMap = checkoutItems.length === 0 ?\n    <span className=\"checkout__empty-text\">This menu is empty! <br />Add items by clicking \"+\" on cards of food below.<br /> Then click \"SUBMIT\" to save the menu, or click \"BACK\" to return without saving.</span> :\n    checkoutItems.map((checkoutItem: CalendarMenuItem) => (\n      <CheckoutItem\n        key={checkoutItem.foodId + \"checkout\"}\n        item={checkoutItem}\n        removeFromCheckout={removeFromCheckout}\n        modifyQuantityOfCheckoutItem={modifyQuantityOfCheckoutItem} />\n    ));\n\n  if (!currentUser) { return <Redirect to='/' /> };\n  if (isSubmitted) { return <Redirect to='/w' /> };\n  if (isFailedToLoad) { return <FailedToLoad /> };\n  return (\n    <div className=\"day\">\n      {isModalShown ? <SubmitItem setIsAddModalShown={setIsAddModalShown} /> : null}\n\n      <div className=\"checkout-back\">\n        <button className=\"button checkout-back__back\" onClick={() => setIsSubmitted(true)}>⬅ BACK</button>\n        <div className=\"checkout\">\n          <span className=\"checkout__heading\">Menu for {params.day}</span>\n          {isLoading ? <Loading /> :\n            <>\n              <div className=\"checkout__board\">\n                {checkoutMap}\n              </div>\n              <div className=\"checkout__button-bar\">\n                <button className=\"button\" onClick={() => setCheckoutItems([])}>CLEAR ALL</button>\n                <button className=\"button button--checkout-submit\" onClick={handleSubmit}>SUBMIT</button>\n              </div>\n            </>}\n        </div>\n      </div>\n      <div className=\"search-filter-grid\">\n        <SearchBar\n          menuList={menuList}\n          checkoutBoardItems={checkoutItems}\n          addCheckOutBoardItem={addCheckoutItem} />\n\n        <FilterBar />\n      </div>\n\n      <FoodItems\n        checkoutItems={checkoutItems}\n        addCheckoutItem={addCheckoutItem}\n        setIsAddModalShown={setIsAddModalShown} />\n\n    </div >\n  );\n};\n\nexport default EditMenu;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux\";\nimport { setIsLoggedIn } from \"../../redux/modules/isLoggedIn\";\nimport { clearCurrentUser } from \"../../redux/modules/currentUser\";\nimport { User } from \"../../shared/types\";\nimport MenuIcon from \"../../assets/MenuIcon\"\nimport './styles/header.css'\n\nconst Header: React.FC = () => {\n  const currentUser = useSelector<RootState, User>(state => state.currentUser)\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(setIsLoggedIn(false))\n    dispatch(clearCurrentUser())\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__icon\"><MenuIcon /></div>\n      <div className=\"header__title\">Menu Plan</div>\n      {currentUser ?\n        <>\n          <span className=\"header__username\">{currentUser.username}</span>\n          <button className=\"header__signout\" onClick={handleLogout}>Signout</button>\n        </> : null}\n    </div>)\n};\n\nexport default Header;\n","import React, { useLayoutEffect, useRef } from 'react';\nimport { User } from '../../shared/types';\n\n\nconst UserDelete: React.FC<UserDeleteProps> = ({\n  handleSubmit,\n  selectedUser,\n  setConfirmDelete\n}) => {\n\n  const focusRef = useRef<HTMLButtonElement>(null);\n\n  useLayoutEffect(() => {\n    if (focusRef.current) focusRef.current.focus();\n  }, []);\n\n  return (\n    <div className=\"user-delete\">\n      <span className=\"user-delete__text\">Delete {selectedUser ? selectedUser.username : null}?</span>\n      <button className=\"button\" ref={focusRef} onClick={(e) => handleSubmit(e)}>YES</button>\n      <button className=\"button\" onClick={() => setConfirmDelete(false)}>NO</button>\n    </div>\n  );\n};\n\ntype UserDeleteProps = {\n  handleSubmit: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  selectedUser: User | null;\n  setConfirmDelete: (boolean: boolean) => void;\n};\n\nexport default UserDelete;","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux';\nimport { User } from '../../shared/types';\n\nconst UserSignup: React.FC<UserSignupProps> = ({\n  setShowAddUser,\n  signupUser\n}) => {\n  const [value, setValue] = useState<string>(\"\");\n  const [usernameList, setUsernameList] = useState<string[]>([]);\n  const users = useSelector<RootState, User[]>(state => state.users);\n  const focusRef = useRef<HTMLInputElement>(null);\n\n\n  useEffect(() => {\n    const newlist = users.reduce((acc: string[], user: User) => {\n      acc.push(user.username)\n      return acc\n    }, []);\n    setUsernameList(newlist);\n  }, [users]);\n\n  useLayoutEffect(() => {\n    if (focusRef.current) focusRef.current.focus()\n  }, []);\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\" && !submitDisabled) signupUser(value)\n  };\n\n  const usernameIncluded = usernameList.includes(value);\n  const submitDisabled = value.length <= 3 || usernameIncluded || value.length >= 15;\n\n  return (\n    <div className=\"user-signup\">\n      <span className=\"user-signup__heading\">Input new username</span>\n      <div className=\"user-signup__input-container\">\n\n        <input className=\"user-signup__input\" type=\"text\" value={value} ref={focusRef} onKeyDown={(e) => handleKeyDown(e)} onChange={(e) => setValue(e.target.value)} />\n        <button className=\"button\" disabled={submitDisabled} onClick={() => signupUser(value)}>Submit</button>\n        <button className=\"button\" onClick={() => setShowAddUser(false)}>X</button>\n      </div>\n\n      {\n        usernameIncluded ?\n          <span className=\"user-signup__error\">Name already included</span> : null\n      }\n      {\n        value.length <= 3 || value.length >= 25 ?\n          <span className=\"user-signup__error\">Username must be between 3 and 25 characters</span> : <br />\n      }\n    </div >\n  );\n};\n\n\ntype UserSignupProps = {\n  setShowAddUser: (boolean: boolean) => void;\n  signupUser: (username: string) => void;\n};\n\nexport default UserSignup;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux\";\nimport Loading from \"../../shared/Loading\";\nimport { User } from \"../../shared/types\";\n\nconst SigninForm: React.FC<SigninFormProps> = ({ value, label = \"Select\", selectMessage = \" \", optionMap, handleSelect, }) => {\n\n  const isLoading = useSelector<RootState, boolean>(state => state.isLoading);\n\n  const options = (optionMap.map((option: User, i: number) =>\n    <option className=\"signin-form__option\" key={option.id} value={i}>{option.username}</option>\n  ));\n\n  if (isLoading) { return <Loading /> };\n  return (\n    <form className=\"signin-form\">\n      <label> {label}\n        <select className=\"signin-form__select\" value={value} onChange={(e) => handleSelect(e)}>\n          <option value=\"\" disabled>{selectMessage}</option>\n          {options}\n        </select>\n      </label>\n    </form>\n  )\n};\n\ntype SigninFormProps = {\n  value: string;\n  label: string\n  selectMessage: string\n  optionMap: User[]\n  handleSelect: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport default SigninForm;","import React from 'react';\nimport \"./styles/home.css\";\n\n\nconst Welcome = () => {\n\n  return (\n    <div className=\"welcome\">\n      <span className=\"welcome__text\">Everything you need for creating a menu for the next 7 days.</span>\n      <span className=\"welcome__sub-text\">Best viewed on Chrome's Desktop Browser</span>\n    </div>\n  );\n};\n\nexport default Welcome;","import React, { useState, useLayoutEffect, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { RootState } from \"../../redux\";\nimport { fetchHelper } from \"../../redux/fetchHelper/fetchHelper\";\nimport { AddUserBody, ReqType } from \"../../redux/fetchHelper/types\";\nimport { setIsLoggedIn } from \"../../redux/modules/isLoggedIn\";\nimport { User } from \"../../shared/types\";\nimport UserDelete from \"./UserDelete\";\nimport UserSignup from \"./UserSignup\";\nimport SigninForm from \"./SigninForm\";\nimport AlertText from \"../../shared/AlertText\";\nimport Welcome from \"./Welcome\";\nimport MenuIcon from \"../../assets/MenuIcon\";\nimport FailedToLoad from \"../../shared/FailedToLoad\";\nimport useIsLoading from \"../../hooks/useIsLoading\";\nimport Loading from \"../../shared/Loading\";\nimport \"./styles/home.css\";\n\nconst Home = () => {\n  const [isDeleteConfirmShown, setIsDeleteConfirmShown] = useState<boolean>(false);\n  const [isSignupShown, setIsSignupShown] = useState<boolean>(false);\n  const [isAlertShown, setIsAlertShown] = useState<boolean>(false);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const users = useSelector<RootState, User[]>(state => state.users);\n  const isFailedToLoad = useSelector<RootState, Boolean>(state => state.isFailedToLoad);\n  const [value, setValue] = useState<string>(\"\");\n  const [isLoading] = useIsLoading();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useLayoutEffect(() => {\n    let listener = setTimeout(() => {\n      setIsAlertShown(false)\n    }, 1200);\n    return () => clearTimeout(listener);\n  }, [isAlertShown]);\n\n  useEffect(() => {\n    dispatch(fetchHelper(ReqType.reqGetUsers));\n  }, [dispatch]);\n\n  const handleDeleteSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setIsDeleteConfirmShown(false);\n    if (selectedUser) deleteUser(selectedUser.id);\n    setIsAlertShown(true);\n    setSelectedUser(null);\n    setValue(\"\");\n  };\n\n  const handleSignin = () => {\n    dispatch(fetchHelper(ReqType.reqGetUser, \"\", selectedUser?.id));\n    dispatch(setIsLoggedIn(true));\n    setSelectedUser(null);\n    setValue(\"\");\n    history.push(\"/w\");\n  };\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setValue(e.target.value);\n    setSelectedUser(users[+e.target.value]);\n  };\n\n  const deleteUser = (id: string) => {\n    dispatch(fetchHelper(ReqType.reqDeleteUser, { id }));\n  };\n\n  const signupUser = (username: string) => {\n    const body: AddUserBody = { username }\n    dispatch(fetchHelper(ReqType.reqAddUser, body));\n    setIsSignupShown(false);\n    setIsAlertShown(true);\n  };\n\n  const checkValue = value.length === 0;\n\n  if (isFailedToLoad) { return <FailedToLoad /> };\n\n  return (\n    <div className=\"home\">\n      <div className=\"home__header\"><MenuIcon /> Menu Plan</div>\n      <Welcome />\n      <div className=\"login\">\n        {isLoading ? <Loading /> :\n          <>\n            <div className=\"signin\">\n              {isDeleteConfirmShown ?\n                <UserDelete\n                  handleSubmit={handleDeleteSubmit}\n                  setConfirmDelete={setIsDeleteConfirmShown}\n                  selectedUser={selectedUser} />\n                :\n                <>\n                  <span className=\"signin__heading\">Select your username</span>\n                  <SigninForm\n                    value={value}\n                    label={\"\"}\n                    selectMessage={\"Select\"}\n                    optionMap={users}\n                    handleSelect={handleSelect} />\n                  <button className=\"button\" onClick={() => handleSignin()} disabled={checkValue}>Sign in</button>\n                  <button className=\"button\" onClick={() => setIsDeleteConfirmShown(true)} disabled={checkValue}>Delete User</button>\n                </>\n              }\n            </div>\n            <div className=\"signup\">\n              {\n                isSignupShown ?\n                  <UserSignup\n                    setShowAddUser={setIsSignupShown}\n                    signupUser={signupUser} />\n                  :\n                  <>\n                    <span className=\"signup__heading\">Don't have a username?</span>\n                    <button className=\"button button--signup\" onClick={() => setIsSignupShown(true)} >Sign up</button>\n                  </>\n              }\n              {isAlertShown ? <AlertText /> : null}\n            </div>\n          </>\n        }\n      </div>\n    </div>\n  );\n};\n\n\nexport default Home;","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport useIsLoading from \"../../hooks/useIsLoading\";\nimport { RootState } from \"../../redux\";\nimport Loading from \"../../shared/Loading\";\nimport { WeekDay, CalendarItem, MenuItemJSON } from \"../../shared/types\";\nimport './styles/week.css';\n\n\nconst DayMenu: React.FC<DayMenuProps> = ({ day, calendarDisplay }) => {\n  const [isClicked, setIsClicked] = useState<boolean>(false);\n  const menuList = useSelector<RootState, MenuItemJSON[]>(state => state.menuList);\n  const [isLoading] = useIsLoading();\n\n  if (isClicked) { return <Redirect to={`/d/${day.dateId}`} /> };\n  return (\n    <div className=\"day-menu\" onClick={() => setIsClicked(true)}>\n      <div className=\"day-menu__heading\">\n        <span className=\"day-menu__heading--day\">{day.day}</span>\n        <span className=\"day-menu__heading--date\">{day.dateId}</span>\n      </div>\n      {isLoading ? <Loading /> :\n        <>\n          {calendarDisplay?.menuItems.map(item => {\n            const menuItem = menuList.find(f => f.id === item.foodId)\n            return (\n              <div className=\"day-menu__menu-item\" key={item.foodId}>\n                <span className=\"menu-item__name\">{menuItem?.item}</span>\n                <span className=\"menu-item__amount\">{item.quantity}</span>\n              </div>\n            )\n          })}\n        </>}\n    </div>\n  );\n};\n\ntype DayMenuProps = {\n  day: WeekDay;\n  calendarDisplay: CalendarItem | null | undefined;\n};\n\nexport default DayMenu;","import { MonthNames, WeekDay, Weekdays } from \"../../../shared/types\";\n\nexport const generateWeekDays = () => {\n const today: Date = new Date();\n const emptyWeek: number[] = new Array(7).fill(null);\n return emptyWeek.reduce((acc: WeekDay[], _, dayIndex) => {\n  const theday = new Date(today);\n  theday.setDate(today.getDate() + dayIndex);\n  const month = theday.getMonth();\n  const day = theday.getDay();\n  const date = String(theday.getDate());\n  const year = String(theday.getFullYear());\n  const dateId: string = `${date}-${month + 1}-${year}`;\n  acc.push({\n   month: MonthNames[month],\n   day: Weekdays[day],\n   date,\n   year,\n   dateId,\n  });\n  return acc;\n }, []);\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { RootState } from \"../../redux\";\nimport { fetchHelper } from \"../../redux/fetchHelper/fetchHelper\";\nimport { ReqType } from \"../../redux/fetchHelper/types\";\nimport { resetFilter } from \"../../redux/modules/filterList\"\nimport { User, WeekDay, CalendarItem } from \"../../shared/types\";\nimport DayMenu from \"./DayMenu\";\nimport { generateWeekDays } from \"./utils/generateWeek\"\nimport './styles/week.css';\nimport FailedToLoad from \"../../shared/FailedToLoad\";\n\nconst Week = React.forwardRef<HTMLDivElement>((_, ref) => {\n  const [week, setWeek] = useState<WeekDay[] | null>(null);\n  const currentUser = useSelector<RootState, User | null>(state => state.currentUser);\n  const calendar = useSelector<RootState, CalendarItem[]>(state => state.calendar);\n  const isFailedToLoad = useSelector<RootState, Boolean>(state => state.isFailedToLoad);\n  const isLoggedIn = useSelector<RootState, boolean>(state => state.isLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const generatedWeek = generateWeekDays();\n    setWeek([...generatedWeek]);\n    const dateList = generatedWeek.map(day => day.dateId).sort();\n    if (currentUser)\n      dispatch(fetchHelper(ReqType.reqGetCalendar, { dateList }, currentUser.id));\n  }, [currentUser, dispatch]);\n\n  useEffect(() => {\n    dispatch(resetFilter());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchHelper(ReqType.reqGetMenu));\n  }, [dispatch]);\n\n  if (!isLoggedIn && !currentUser) { return <Redirect to='/' /> };\n  if (isFailedToLoad) { return <FailedToLoad /> };\n\n  return (\n    <div className=\"week\" ref={ref}>\n      { week?.map(day => {\n        const calendarDisplay = calendar.find(item => item.date === day.dateId);\n        return (\n          <DayMenu\n            key={day.dateId}\n            day={day}\n            calendarDisplay={calendarDisplay} />)\n      })}\n    </div>\n  );\n});\n\nexport default Week;\n","export default __webpack_public_path__ + \"static/media/printer.1a6e7ce5.svg\";","import React, { useRef } from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport Week from \".\";\nimport printer from '../../assets/printer.svg';\nimport useIsLoading from \"../../hooks/useIsLoading\";\nimport Loading from \"../../shared/Loading\";\nimport './styles/week.css';\n\n//this is a wrapper created for use with react-to-print\n\nconst PrintableWeek = () => {\n  const componentRef = useRef(null);\n  return (\n    <div className=\"print\">\n      <ReactToPrint\n        trigger={() => <a href=\"#/\" ><img className=\"print__icon\" src={printer} alt=\"Printer Icon\" /></a>}\n        content={() => componentRef.current}\n      />\n      <Week ref={componentRef} />\n\n    </div>\n  );\n};\n\nexport default PrintableWeek;","\nimport React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport EditMenu from '../EditMenu';\nimport Header from '../Header/Header';\nimport Home from '../Home';\nimport ErrorPage from '../ErrorPage';\nimport PrintableWeek from '../Week/WeekPrintable';\n\n\nconst Routes: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/w\">\n          <>\n            <Header />\n            <PrintableWeek />\n          </>\n        </Route>\n        <Route path=\"/d/:day\">\n          <>\n            <Header />\n            <EditMenu />\n          </>\n        </Route>\n        <Route>\n          <ErrorPage\n            text={\"404: Not found\"}\n            subText={\"Redirecting to homepage...\"}\n            isRedirected={true} />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\n\n\nexport default Routes","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\nimport './index.css'\nimport Routes from \"./pages/Routes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}